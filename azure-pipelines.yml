name: Week08-Docker

trigger:
- master
#- feature/*

pool: Docker

# variables:
#   YOURVARKEYS: YOURVARVALUES
#   ...

stages:

# Continuous Integration Process
- stage: CI
  jobs:
  - job: BuildAndPushDocker
    workspace: 
      clean: all
    steps:
      # - task: CopyFiles@2
      #   inputs:
      #     SourceFolder: '$(System.DefaultWorkingDirectory)'
      #     Contents: '**/**'
      #     TargetFolder: '/home/ubuntu/repo'
        
      # - task: DockerInstaller@0
      #   displayName: 'Install Docker 17.09.0-ce'

      - task: Docker@2
        inputs:
          containerRegistry: 'ben1213test.azurecr.io'
          repository: 'weight-app-repo'
          command: 'buildAndPush'
          Dockerfile: '$(Build.SourcesDirectory)/Dockerfile'

# Continuous Deployment Process for Staging Environment
# - stage: DeployToStaging
#   condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/master'))
#   jobs:
#   - deployment: staging
#     displayName: Deploy to Staging
#     environment:
#       name: staging
#       resourceType: VirtualMachine
#     strategy:
#       runOnce:
#         deploy:
#           steps:
#           - task: CmdLine@2
#             inputs:
#               script: |
#                 sudo apt update
#                 sudo apt install apt-transport-https ca-certificates curl software-properties-common
#                 curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
#                 sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable"
#                 apt-cache policy docker-ce
#                 sudo apt install docker-ce
#                 sudo usermod -aG docker ${USER}
          
#           - task: DockerInstaller@0
#             displayName: 'Install Docker 17.09.0-ce'
          
          

# # Continuous Delivery Process for Production Environment
# - stage: DeployToProduction
#   condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/master'))
#   jobs:
#   - deployment: production
#     displayName: Deploy to Production
#     environment:
#       name: <<YOUR ENVIRONMENT NAME>>
#       resourceType: VirtualMachine
#     strategy:
#       runOnce:
#         deploy:
#           steps:
#           - <<YOUR TASKS>>
